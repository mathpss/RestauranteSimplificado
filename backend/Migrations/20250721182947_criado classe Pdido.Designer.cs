// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backend.Context;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(RestauranteContext))]
    [Migration("20250721182947_criado classe Pdido")]
    partial class criadoclassePdido
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Cardapio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Guarnicao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Mistura")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cardapios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Guarnicao = "Legumes Refogado, Abóbora Cabutia, Repolho Refogado, Salada de Ovo c/ Maionese, Batata Palha, Macarrão Alho e Óleo, Farofa do Cheff",
                            Mistura = "Isca de Carne, Calabresa Acebolada, Linguiça Tosacana Frita, Parmegiana de Frango, Filé de Frango Empanado, Ovo Frito"
                        });
                });

            modelBuilder.Entity("backend.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.PrimitiveCollection<List<string>>("Guarnicao")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<List<string>>("Mistura")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("NumeroPedido")
                        .HasColumnType("integer");

                    b.Property<int>("PedidoEntregaId")
                        .HasColumnType("integer");

                    b.Property<int>("PedidoRetiradaId")
                        .HasColumnType("integer");

                    b.Property<string>("Tamanho")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PedidoEntregaId");

                    b.HasIndex("PedidoRetiradaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("backend.Models.PedidoEntrega", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("NomeRua")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("NumeroRua")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.ToTable("PedidoEntregas");
                });

            modelBuilder.Entity("backend.Models.PedidoRetirada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.HasKey("Id");

                    b.ToTable("PedidoRetiradas");
                });

            modelBuilder.Entity("backend.Models.Pedido", b =>
                {
                    b.HasOne("backend.Models.PedidoEntrega", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("PedidoEntregaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.PedidoRetirada", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("PedidoRetiradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("backend.Models.PedidoEntrega", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("backend.Models.PedidoRetirada", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
